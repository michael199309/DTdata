/home/xxm/Desktop/EMSE/dataset/faceswap/lib/face_filter.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.face_filter.FaceFilter.check,var,msg,None,159,                msg = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/face_filter.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.face_filter.FaceFilter.check,var,msg,None,162,            msg = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/face_filter.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.face_filter.FaceFilter.check,var,msg,str,130,"            msg = ""Rejecting filter face: {} > {}"".format(round(avgs[""filter""], 2), self.threshold)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/face_filter.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.face_filter.FaceFilter.check,var,msg,str,134,"            msg = ""Rejecting nFilter face: {} < {}"".format(round(avgs[""nfilter""], 2),"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/scaling/sharpen.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.scaling.sharpen.Scaling.get,var,kernel_size,int,24,        kernel_size = int((radius * 2) + 1)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/scaling/sharpen.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.scaling.sharpen.Scaling.get,var,kernel_size,"(int, int)",25,"        kernel_size = (kernel_size, kernel_size)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/train.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.train.Train._run_training_cycle,var,display_func,None,298,            display_func = None
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/train.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.train.Train._run_training_cycle,var,display_func,"(Train, ?, str) -> ?",296,            display_func = self._show
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/layers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.layers.PixelShuffler.compute_output_shap,var,retval,"(?, ?, None, None)",147,"            retval = (input_shape[0],"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/layers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.layers.PixelShuffler.compute_output_shap,var,retval,"(?, None, None, ?)",163,"            retval = (input_shape[0],"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/mask/mask_blend.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.mask.mask_blend.Mask._get_,var,mask,None,82,            mask = self._crop_to_coverage(mask.mask)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/mask/mask_blend.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.mask.mask_blend.Mask._get_,var,mask,float,90,"            mask = mask.astype(""float32"") / 255.0"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/mask/mask_blend.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.mask.mask_blend.Mask.proce,var,mask,None,51,            mask = self._erode(mask)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/mask/mask_blend.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.mask.mask_blend.Mask.proce,var,mask,float,48,"        mask = self._get_mask(detected_face, predicted_mask)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/pipeline.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.pipeline.Extractor._get_plugin_type_and_inde,var,idx,int,384,            idx = int(idx)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/pipeline.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.pipeline.Extractor._get_plugin_type_and_inde,var,idx,None,388,            idx = None
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/pipeline.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.pipeline.Extractor._get_plugin_type_and_inde,var,idx,str,382,"        idx = flow_phase.split(""_"")[-1]"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/wrapper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.wrapper.FaceswapControl.calc_elapsed,var,hrs,int,287,            hrs = int(elapsed_time // 3600)
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/wrapper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.wrapper.FaceswapControl.calc_elapsed,var,hrs,str,289,"                hrs = ""{0:02d}"".format(hrs)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/wrapper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.wrapper.FaceswapControl.calc_elapsed,var,hrs,str,293,"            hrs = ""00"""
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/writer/opencv.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.writer.opencv.Writer.get_save_,var,args,list,30,        args = list()
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/writer/opencv.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.writer.opencv.Writer.get_save_,var,args,"(?, ?)",32,"            args = (cv2.IMWRITE_JPEG_QUALITY,  # pylint: disable=no-member"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/convert/writer/opencv.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.convert.writer.opencv.Writer.get_save_,var,args,"(?, ?)",35,"            args = (cv2.IMWRITE_PNG_COMPRESSION,  # pylint: disable=no-member"
/home/xxm/Desktop/EMSE/dataset/faceswap/setup.py,.home.xxm.Desktop.EMSE.dataset.faceswap.setup.Environment.update_tf_dep,var,tf_ver,None,240,        tf_ver = None
/home/xxm/Desktop/EMSE/dataset/faceswap/setup.py,.home.xxm.Desktop.EMSE.dataset.faceswap.setup.Environment.update_tf_dep,var,tf_ver,str,254,"            tf_ver = ""tensorflow-gpu{}"".format(tf_ver)"
/home/xxm/Desktop/EMSE/dataset/faceswap/setup.py,.home.xxm.Desktop.EMSE.dataset.faceswap.setup.Environment.is_virtualen,var,retval,int,100,"            retval = (hasattr(sys, ""real_prefix"") or"
/home/xxm/Desktop/EMSE/dataset/faceswap/setup.py,.home.xxm.Desktop.EMSE.dataset.faceswap.setup.Environment.is_virtualen,var,retval,bool,104,"            retval = (os.path.basename(prefix) == ""envs"")"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/s3fd.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.s3fd.S3fd.finalize_prediction,var,bboxlist,None,239,"            bboxlist = self._nms(boxes, 0.5)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/s3fd.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.s3fd.S3fd.finalize_prediction,var,bboxlist,[None],237,            bboxlist = [scale[img:img+1] for scale in bounding_boxes_scales]
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/s3fd.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.s3fd.O2K_Slice.get_slic,var,axes,None,106,        axes = self._axes
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/s3fd.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.s3fd.O2K_Slice.get_slic,var,axes,tuple,109,            axes = tuple(range(ndims))
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.gradients,var,boundary,list,259,    boundary = list(checkpoints_disconnected.values())
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.gradients,var,boundary,[?],305,        boundary = [info._transformed_ops[r.op]._outputs[0] for r in ts]
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.grad,var,checkpoints,list,202,    checkpoints = list(set(checkpoints).intersection(ts_all))
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.grad,var,checkpoints,list,224,    checkpoints = list(set(checkpoints) - set(ys) - set(xs))
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.grad,var,checkpoints,[<list>],194,                checkpoints = sorted_bottlenecks
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.grad,var,checkpoints,[<list>],197,                checkpoints = sorted_bottlenecks[step::step]
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.gradien,var,ts,list,280,    for ts in checkpoints_sorted_lists[::-1]:
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/memory_saving_gradients.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.memory_saving_gradients.gradien,var,ts,{[?] | list},163,"            for ts in [ts_filtered, ts_all]:"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.stats.Calculations.get_raw,var,data,list,413,                data = self.flatten_outliers(data)
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.stats.Calculations.get_raw,var,data,{[?] | list},411,            data = self.calc_rate_total() if self.is_totals else self.calc_rate()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.stats.convert_time,var,hrs,int,21,    hrs = int(timestamp // 3600)
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.stats.convert_time,var,hrs,str,23,"        hrs = ""{0:02d}"".format(hrs)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect._base.Detector.finaliz,var,batch_faces,[[DetectedFace]],156,"        batch_faces = [[self.to_detected_face(face[0], face[1], face[2], face[3])"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect._base.Detector.finaliz,var,batch_faces,[[?]],166,        batch_faces = self._remove_zero_sized_faces(batch_faces)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect._base.Detector.finaliz,var,batch_faces,[[None]],161,"            batch_faces = [[self._rotate_face(face, rotmat) if rotmat.any() else face"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.TrainerBase.__print_loss,var,output,[str],245,"        output = [""Loss {}: {:.5f}"".format(side.capitalize(), loss[side][0])"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.TrainerBase.__print_loss,var,output,str,247,"        output = "", "".join(output)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.TrainerBase.__print_loss,var,output,str,248,"        output = ""[{}] [#{:05d}] {}"".format(self._timestamp, self._model.iterations, output)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.Samples._to_full_fr,var,images,[None],734,"        images = [self._resize_sample(side, image, target_size) for image in images]"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.Samples._to_full_fr,var,images,[None],736,"            images = [self._overlay_foreground(frame, image) for image in images]"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.Samples._to_full_fr,var,images,[None],739,"            images = [self._resize_sample(side, image, new_size) for image in images]"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.Samples._to_full_fr,var,images,[?],726,        images = [faces] + predictions
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/trainer/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.trainer._base.Samples._to_full_fr,var,images,list,733,"            images = self._compile_masked(images, samples[-1])"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,<_JSONSerializer>,302,        retval = _JSONSerializer
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,_NPYSerializer,290,        retval = _NPYSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,_PickleSerializer,296,        retval = _PickleSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,_CompressedSerializer,292,        retval = _CompressedSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,_YAMLSerializer,298,        retval = _YAMLSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializ,var,retval,_JSONSerializer,294,        retval = _JSONSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_NPYSerializer,336,        retval = _NPYSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_YAMLSerializer,340,        retval = _YAMLSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_JSONSerializer,332,        retval = _JSONSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_JSONSerializer,344,        retval = _JSONSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_JSONSerializer,347,        retval = _JSONSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_PickleSerializer,334,        retval = _PickleSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/serializer.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.serializer.get_serializer_from_filenam,var,retval,_CompressedSerializer,338,        retval = _CompressedSerializer()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/training_data.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.training_data.TrainingDataGenerator._get_closest_m,var,closest_hashes,[?],306,        closest_hashes = [self._nearest_landmarks.get(filename) for filename in filenames]
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/training_data.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.training_data.TrainingDataGenerator._get_closest_m,var,closest_hashes,list,308,"            closest_hashes = self._cache_closest_hashes(filenames, batch_src_points, landmarks)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._predict_faces,var,predicted,None,873,"                    predicted = self._predict(feed_faces, batch_size)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._predict_faces,var,predicted,list,875,                    predicted = list()
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._g,var,detected_faces,None,526,"            detected_faces = self._detect_faces(filename, image)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._g,var,detected_faces,list,524,"            detected_faces = self._alignments_faces(os.path.basename(filename), image)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._get_frame_ranges,var,minframe,int,334,"            minframe, maxframe = 1, self._images.count"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._get_frame_ranges,var,minframe,int,339,"                minframe, maxframe = min(indices), max(indices)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._get_frame_ranges,var,minframe,None,332,"        minframe, maxframe = None, None"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._predict_f,var,batch_size,int,872,                        batch_size = 1
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._predict_f,var,batch_size,None,869,                    batch_size = None
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._,var,predicted,{[?] | [list]},962,        predicted = self._filter_multi_out(predicted)
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._,var,predicted,[?],959,"        predicted = predicted if isinstance(predicted, list) else [predicted]"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._,var,predicted,list,965,"        predicted = np.concatenate(predicted, axis=-1) if len(predicted) == 2 else predicted[0]"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._total_coun,var,retval,int,289,            retval = sum([fr[1] - fr[0] + 1 for fr in self._frame_ranges])
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.DiskIO._total_coun,var,retval,ImagesLoader -> int,291,            retval = self._images.count
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._get_model_nam,var,statefile,[str],793,        statefile = [fname for fname in os.listdir(str(model_dir))
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.convert.Predict._get_model_nam,var,statefile,str,799,"        statefile = os.path.join(str(model_dir), statefile[0])"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.convert_to_secs,var,retval,int,145,        retval = 60 * float(args[0]) + float(args[1])
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.convert_to_secs,var,retval,int,147,        retval = 3600 * float(args[0]) + 60 * float(args[1]) + float(args[2])
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.convert_to_secs,var,retval,float,141,    retval = 0.0
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.convert_to_secs,var,retval,float,143,        retval = float(args[0])
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.GetModel._model_path,var,retval,[str],301,"        retval = [os.path.join(self.cache_dir, fname) for fname in self.model_filename]"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.utils.GetModel._model_path,var,retval,{[str] | str},302,        retval = retval[0] if len(retval) == 1 else retval
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.Analysis.load_session,var,msg,None,125,        msg = fullpath
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.Analysis.load_session,var,msg,str,127,"            msg = ""...{}"".format(msg[-70:])"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,default,int,633,                default = 500
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,default,float,639,                default = 0.90
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,min_max,"(int, float)",641,"                min_max = (0, 0.99)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,min_max,"(int, int)",635,"                min_max = (25, 2500)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,dtype,<int>,631,                dtype = int
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_analysis.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_analysis.SessionPopUp.opts_slider,var,dtype,<float>,637,                dtype = float
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.Images.load_one_imag,var,retval,None,309,            retval = self._load_one_video_frame(int(frame_no))
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.Images.load_one_imag,var,retval,"(?, ?)",311,"            retval = read_image(filename, raise_error=True)"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.Images.load_one_imag,var,frame_no,list,305,                frame_no = filename
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.Images.load_one_imag,var,frame_no,str,307,"                frame_no = os.path.splitext(filename)[0][filename.rfind(""_"") + 1:]"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.FaceFilter._load_face_,var,facefilter,None,560,        facefilter = None
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.FaceFilter._load_face_,var,facefilter,FaceFilter,565,"            facefilter = FilterFunc(filter_files[0],"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.FaceFilter._set_fac,var,filter_files,[?],596,"        filter_files = f_args if isinstance(f_args, list) else [f_args]"
/home/xxm/Desktop/EMSE/dataset/faceswap/scripts/fsmedia.py,.home.xxm.Desktop.EMSE.dataset.faceswap.scripts.fsmedia.FaceFilter._set_fac,var,filter_files,list,597,"        filter_files = list(filter(lambda fpath: Path(fpath).exists(), filter_files))"
/home/xxm/Desktop/EMSE/dataset/faceswap/tests/lib/model/layers_test.py,.home.xxm.Desktop.EMSE.dataset.faceswap.tests.lib.model.layers_test.layer_tes,var,input_data,int,38,        input_data = (10 * np.random.random(input_data_shape))
/home/xxm/Desktop/EMSE/dataset/faceswap/tests/lib/model/layers_test.py,.home.xxm.Desktop.EMSE.dataset.faceswap.tests.lib.model.layers_test.layer_tes,var,input_data,None,24,"               input_data=None, expected_output=None,"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project._GuiSession._get_options_for_command,var,retval,{dict | dict | dict},210,        retval = {command: opts}
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project._GuiSession._get_options_for_command,var,retval,None,214,            retval = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project._GuiSession._set_options,var,tab_name,{None | _GuiSession -> None | _GuiSession -> None},189,"        tab_name = self._options.get(""tab_name"", None) if command is None else command"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project._GuiSession._set_options,var,tab_name,{None | _GuiSession -> None | _GuiSession -> None | str},190,"        tab_name = tab_name if tab_name is not None else ""extract"""
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project.Tasks.l,var,command,{None | _GuiSession -> None | _GuiSession -> None},497,        command = self._get_lone_task() if command is None else command
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/project.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.project.Tasks.l,var,command,{_GuiSession -> None | _GuiSession -> None},496,        command = self._active_tab if current_tab else self._stored_tab_name
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display.DisplayNotebook.add_static_tabs,var,frame,None,51,                frame = self.add_frame()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display.DisplayNotebook.add_static_tabs,var,frame,Analysis,49,"                frame = Analysis(self, tab, helptext)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,vram,PlaidMLStats -> [int],284,            vram = self._plaid.vram
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,vram,[int],286,"            vram = [pynvx.cudaGetMemTotal(handle, ignore=True) / (1024 * 1024)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,vram,[int],289,            vram = [pynvml.nvmlDeviceGetMemoryInfo(handle).total /
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,vram,list,282,            vram = list()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,driver,PlaidMLStats -> [?],236,            driver = self._plaid.drivers
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_,var,driver,str,243,"                driver = ""No Nvidia driver found"""
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_devic,var,names,list,259,            names = list()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_devic,var,names,[?],263,"            names = [pynvx.cudaGetName(handle, ignore=True)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_devic,var,names,[?],266,"            names = [pynvml.nvmlDeviceGetName(handle).decode(""utf-8"")"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gpu_stats.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gpu_stats.GPUStats._get_devic,var,names,PlaidMLStats -> [str],261,            names = self._plaid.names
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images._get_newest_filenames,var,retval,[str],519,            retval = image_files
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images._get_newest_filenames,var,retval,{[?] | [str]},521,            retval = [fname for fname in image_files
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Config.set_geometry,var,initial_dimensions,"(?, ?)",1062,"            initial_dimensions = (self.root.winfo_screenwidth(), self.root.winfo_screenheight())"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Config.set_geometry,var,initial_dimensions,"(int, int)",1064,"            initial_dimensions = (round(width * self.scaling_factor),"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images.load_training_preview,var,modified,int,653,            modified = os.path.getmtime(img) if modified is None else modified
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images.load_training_preview,var,modified,None,647,        modified = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images.resize_imag,var,size,"(?, int)",722,"                size = (frame_dims[0], int(displayimg.size[1] * scale))"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/utils.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.utils.Images.resize_imag,var,size,"(int, ?)",725,"                size = (int(displayimg.size[0] * scale), frame_dims[1])"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/mask/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.mask._base.Masker._collect_,var,item,ExtractMedia,155,            item = self._get_item(queue)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/mask/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.mask._base.Masker._collect_,var,item,None,152,            item = self._rollover
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/losses.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.losses.PenalizedLo,var,mask,int,281,    mask = (mask * mask_prop) + mask_as_k_inv_prop
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/losses.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.losses.PenalizedLo,var,mask,{Loss -> None | None},277,"    mask = _scale_mask(mask, mask_scaling)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.NNM,var,output_names,[?],812,        output_names = [output.name for output in self.network.outputs]
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.NNM,var,output_names,[str],816,            output_names = self.get_output_names()
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.Loss.get,var,loss_names,[?],727,"        loss_names = [name[name.find(""/"") + 1:name.rfind(""/"")].replace(""_out"", """")"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.Loss.get,var,loss_names,[str],732,            loss_names = self.update_loss_names()
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.Loss.get,var,loss_names,[str],733,"        loss_names = [""{}_loss"".format(name) for name in loss_names]"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.Loss.mask_preprocessing_func,var,retval,None,679,        retval = None
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.Loss.mask_preprocessing_func,var,retval,? -> None,681,"            retval = gaussian_blur(max(1, self.mask_shape[1] // 32))"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.ModelBase.add_network,param,self,ModelBase,284,    def add_networks(self):
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/train/model/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.train.model._base.ModelBase.add_network,param,self,{Model | Model | Model | Model | Model | Model | ModelBase},302,"    def add_network(self, network_type, side, network, is_output=False):"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.gen_cli_arguments,var,opt,[?],294,                    opt = [opt] + optval
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.gen_cli_arguments,var,opt,"(?, str)",296,"                    opt = (opt, optval)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.gen_cli_arguments,var,optval,[?],291,"                        optval = [arg[1:-1] for arg in re.findall(r""\"".+?\"""", optval)]"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.gen_cli_arguments,var,optval,str,280,"            optval = str(option[""cpanel_option""].get())"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.get_data_typ,var,retval,<str>,153,            retval = str
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.get_data_typ,var,retval,? -> bool,151,            retval = bool
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.build_option,var,mod_classes,dict,34,                mod_classes = self._get_tools_cli_classes()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/options.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.options.CliOptions.build_option,var,mod_classes,[?],39,                mod_classes = self.get_cli_classes(cli)
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.ControlBuilder._multi_option_contro,var,ctl,<MultiOption>,824,"            ctl = ttk.Radiobutton if option_type == ""radio"" else MultiOption"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.ControlBuilder._multi_option_contro,var,ctl,MultiOption,825,"            ctl = ctl(holder.subframe,"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.ControlPanelOption.get,var,val,int,228,                val = 0
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.ControlPanelOption.get,var,val,float,230,                val = 0.0
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.AutoFillContainer.pack_widget_clones,var,parent,list,689,"                parent = new_children[old_children.index(widget_dict[""parent""])]"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/control_helper.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.control_helper.AutoFillContainer.pack_widget_clones,var,parent,AutoFillContainer -> None,693,                parent = self.subframe
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_command.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_command.PreviewTrain.add_child,var,preview,None,106,"        preview = self.subnotebook_add_page(name, widget=preview)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_command.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_command.PreviewTrain.add_child,var,preview,PreviewTrainCanvas,105,"        preview = PreviewTrainCanvas(self.subnotebook, name)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_command.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_command.GraphDisplay.add_child,var,graph,None,284,"        graph = self.subnotebook_add_page(name, widget=graph)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_command.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_command.GraphDisplay.add_child,var,graph,TrainingGraph,282,"        graph = TrainingGraph(self.subnotebook, data, ""Loss"")"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/align/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.align._base.Aligner._collect_,var,item,ExtractMedia,163,            item = self._get_item(queue)
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/align/_base.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.align._base.Aligner._collect_,var,item,None,160,            item = self._rollover
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_graph.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_graph.GraphBase.axes_data_get_min_max,var,ymin,int,170,        ymin = floor(min(ymin)) / 1000
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/gui/display_graph.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.gui.display_graph.GraphBase.axes_data_get_min_max,var,ymin,list,163,"        ymin, ymax = list(), list()"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/sysinfo.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.sysinfo._SysInfo._is_virtual_en,var,retval,int,63,"            retval = (hasattr(sys, ""real_prefix"") or"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/sysinfo.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.sysinfo._SysInfo._is_virtual_en,var,retval,bool,67,"            retval = (os.path.basename(prefix) == ""envs"")"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/sysinfo.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.sysinfo._SysInfo._get_cuda_,var,path,None,267,            path = self._cuda_path_windows()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/sysinfo.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.sysinfo._SysInfo._get_cuda_,var,path,None,269,            path = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/sysinfo.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.sysinfo._SysInfo._get_cuda_,var,path,str,265,            path = self._cuda_path_linux()
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/initializers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.initializers.ConvolutionAware.__c,var,kernel_shape,"(?, ?, ?)",241,"            kernel_shape = (var_x, var_y, var_z)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/initializers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.initializers.ConvolutionAware.__c,var,kernel_shape,"(?, ?)",233,"            kernel_shape = (row, column)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/initializers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.initializers.ConvolutionAware.__call,var,transpose_dimensions,"(int, int, int, int)",232,"            transpose_dimensions = (2, 3, 1, 0)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/initializers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.initializers.ConvolutionAware.__call,var,transpose_dimensions,"(int, int, int)",224,"            transpose_dimensions = (2, 1, 0)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/model/initializers.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.model.initializers.ConvolutionAware.__call,var,transpose_dimensions,"(int, int, int, int, int)",240,"            transpose_dimensions = (3, 4, 0, 1, 2)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/cli/actions.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.cli.actions._FullPaths.__call__,var,vals,[str],23,            vals = [os.path.abspath(os.path.expanduser(val)) for val in values]
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/cli/actions.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.cli.actions._FullPaths.__call__,var,vals,str,25,            vals = os.path.abspath(os.path.expanduser(values))
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.convert.Converter._patch_imag,var,patched_face,None,197,            patched_face = self._writer_pre_encode(patched_face)
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.convert.Converter._patch_imag,var,patched_face,float,190,"        patched_face = self._post_warp_adjustments(background, new_image)"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/convert.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.convert.Converter._patch_imag,var,patched_face,float,191,        patched_face = self._scale_image(patched_face)
/home/xxm/Desktop/EMSE/dataset/faceswap/tools.py,.home.xxm.Desktop.EMSE.dataset.faceswap.tools.mask.mask.Mask._create_imag,var,face,DetectedFace -> None,394,
/home/xxm/Desktop/EMSE/dataset/faceswap/tools.py,.home.xxm.Desktop.EMSE.dataset.faceswap.tools.mask.mask.Mask._create_imag,var,face,None,391,
/home/xxm/Desktop/EMSE/dataset/faceswap/tools.py,.home.xxm.Desktop.EMSE.dataset.faceswap.tools.mask.mask.Mask._create_imag,var,face,None,399,
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/image.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.image.count_frames,var,duration,int,530,"            duration = int(convert_to_secs(*output[idx:].split("","", 1)[0].strip().split("":"")))"
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/image.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.image.count_frames,var,duration,None,518,    duration = None
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/image.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.image.FfmpegReader._initializ,var,seek_fast,int,172,                seek_fast = starttime - seek_slow
/home/xxm/Desktop/EMSE/dataset/faceswap/lib/image.py,.home.xxm.Desktop.EMSE.dataset.faceswap.lib.image.FfmpegReader._initializ,var,seek_fast,list,167,                seek_fast = keyframe_pts
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/mtcnn.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.mtcnn.MTCNN.detect_f,var,rectangles,[[?]],223,"        rectangles = self.detect_pnet(batch, origin_h, origin_w)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/mtcnn.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.mtcnn.MTCNN.detect_f,var,rectangles,list,225,"        rectangles = self.detect_onet(batch, rectangles, origin_h, origin_w)"
/home/xxm/Desktop/EMSE/dataset/faceswap/plugins/extract/detect/mtcnn.py,.home.xxm.Desktop.EMSE.dataset.faceswap.plugins.extract.detect.mtcnn.MTCNN.detect_f,var,rectangles,[{[[int]] | list}],224,"        rectangles = self.detect_rnet(batch, rectangles, origin_h, origin_w)"
